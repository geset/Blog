@page "/AboutMe/{ProfileId:guid}"
@using LinkDotNet.Blog.Infrastructure.Persistence
@using LinkDotNet.Blog.Web.Features.AboutMe.Components
@using LinkDotNet.Blog.Domain
@inject IOptions<ApplicationConfiguration> AppConfiguration
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IRepository<PersonalProfile> ProfileRepository

@if (AppConfiguration.Value.IsAboutMeEnabled)
{
    <OgData Title="@("About Me - " + profileInformation?.FullName)"
            Description="@("About Me," + profileInformation?.FullName)"
            Keywords="@profileInformation?.FullName"
            AbsolutePreviewImageUrl="@ImageUrl"></OgData>

    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-4">
                <Profile ShowAdminActions="@isAuthenticated" ProfileInformation="profileInformation" />
                <button class="btn btn-secondary mt-3" @onclick="GoBack">Go Back to Profile search</button>
            </div>
            <TabbedNavigation IsAuthenticated="isAuthenticated" ProfileId="@ProfileId.ToString()" />
        </div>
    </div>
}

@code {
    private bool isAuthenticated;
    private ProfileInformation profileInformation = new();
    [Parameter] public Guid ProfileId { get; set; }

    private string ImageUrl => profileInformation?.ProfilePictureUrl != null
    ? profileInformation.ProfilePictureUrl.ToAbsoluteUrl(NavigationManager.BaseUri)
    : "assets/profile-picture.webp";

    protected override async Task OnInitializedAsync()
    {
        var userIdentity = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity;
        isAuthenticated = userIdentity?.IsAuthenticated ?? false;
        var profile = await ProfileRepository.GetByIdWithIncludeAsync(ProfileId.ToString(), p => p.ProfileInformationEntries);
        if (profile == null)
        {
            NavigationManager.NavigateTo("/profile-information-search");
            return;
        }
        profileInformation = new ProfileInformation
        {
            ProfileId = profile.Id,
            Name = profile.FullName,
            Heading = profile.Talk?.PresentationTitle ?? string.Empty,
            ProfilePictureUrl = ImageUrl ?? string.Empty,
            FirstName = profile.FirstName,
            LastName = profile.LastName,
            FullName = profile.FullName,
            ProfileInformationEntries = profile.ProfileInformationEntries.ToList()
        };
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/profile-information-search");
    }
}

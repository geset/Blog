@using LinkDotNet.Blog.Domain
@using LinkDotNet.Blog.Infrastructure.Persistence
@inject IRepository<Talk> Repository

@if (talk != null || ShowAdminActions)
{
    @if (ShowAdminActions)
    {
        <button id="add-talk" type="button" class="btn btn-primary" @onclick="OpenAddOrEditTalkDialog">
            <i class="plus"></i>@(talk != null ? "Edit Profile" : "Add Profile")
        </button>
        <AddTalkEntryDialog @ref="AddTalkEntryDialog" TalkCreated="StoreTalk" TalkToEdit="talk" ProfileId="@ProfileId"></AddTalkEntryDialog>
    }
    @if (talk != null)
    {
        <ul class="list-unstyled">
            <TalkEntry Talk="talk" ShowAdminActions="ShowAdminActions" TalkDeleted="@DeleteTalk"></TalkEntry>
        </ul>
    }
}

@code {
    [Parameter]
    public bool ShowAdminActions { get; set; }

    [Parameter]
    public string ProfileId { get; set; } = string.Empty;

    private Talk? talk;
    private AddTalkEntryDialog AddTalkEntryDialog { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        talk = (await Repository.GetAllAsync(t => t.ProfileId == ProfileId)).FirstOrDefault();
    }

    private void OpenAddOrEditTalkDialog()
    {
        AddTalkEntryDialog.Open();
    }

    private async Task DeleteTalk()
    {
        if (talk != null)
        {
            await Repository.DeleteAsync(talk.Id);
            talk = null;
        }
    }

    private async Task StoreTalk(Talk updatedTalk)
    {
        talk = updatedTalk;
        await Repository.StoreAsync(talk);
    }
}

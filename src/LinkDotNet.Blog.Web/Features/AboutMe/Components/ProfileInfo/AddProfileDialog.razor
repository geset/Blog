@using LinkDotNet.Blog.Domain

<ModalDialog @ref="Dialog" Title="@((ProfileToEdit != null) ? "Edit Profile" : "Add Profile")">
    <EditForm Model="model" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="firstName" class="form-label">First Name</label>
            <InputText id="firstName" @bind-Value="model.FirstName" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="lastName" class="form-label">Last Name</label>
            <InputText id="lastName" @bind-Value="model.LastName" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </EditForm>
</ModalDialog>

@code {
    [Parameter]
    public EventCallback<PersonalProfile> ProfileCreated { get; set; }

    private ModalDialog Dialog { get; set; } = default!;
    private AddProfileViewModel model = new();

    private PersonalProfile? _profileToEdit;
    [Parameter]
    public PersonalProfile? ProfileToEdit
    {
        get => _profileToEdit;
        set
        {
            if (_profileToEdit != value)
            {
                _profileToEdit = value;
                model = _profileToEdit != null
                    ? new AddProfileViewModel
                    {
                        FirstName = _profileToEdit.FirstName,
                        LastName = _profileToEdit.LastName
                    }
                    : new AddProfileViewModel();
            }
        }
    }

    public void Show()
    {
        Dialog.Open();
        StateHasChanged();
    }

    private async Task HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(model.FirstName);
        ArgumentNullException.ThrowIfNull(model.LastName);

        PersonalProfile profile;
        if (ProfileToEdit != null)
        {
            // Update existing profile
            ProfileToEdit.Update(model.FirstName, model.LastName);
            profile = ProfileToEdit;
        }
        else
        {
            // Create new profile
            profile = PersonalProfile.Create(model.FirstName, model.LastName);
        }

        await ProfileCreated.InvokeAsync(profile);
        model = new AddProfileViewModel();
        Dialog.Close();
    }

    private void Cancel()
    {
        Dialog.Close();
    }
}

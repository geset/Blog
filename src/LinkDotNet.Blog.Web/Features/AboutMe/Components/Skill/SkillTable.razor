@using LinkDotNet.Blog.Domain
@using LinkDotNet.Blog.Infrastructure.Persistence
@using LinkDotNet.Blog.Web.Features.AboutMe.Components.Skill
@inject IRepository<Skill> Repository

<div>
    @if (ShowAdminActions)
    {
        <button type="button" class="btn btn-primary" @onclick="() => AddSkillDialog.Open()">
            <i class="plus"><div class="vr"></div></i>Add skill
        </button>
        <AddSkillDialog @ref="AddSkillDialog" SkillAdded="@AddSkill" ProfileId="@ProfileId" />
    }
</div>
<div class="table-container">
    <table class="skill-table" id="skill-table">
        <thead>
            <tr>
                <th class="expand-column"></th>
                <th class="title-column">Title</th>
                <th>Type</th>
                <th>Date</th>
                <th>Venue/Publisher</th>
                @if (ShowAdminActions)
                {
                    <th>Actions</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var skill in skills)
            {
                <tr @onclick="() => ToggleDescription(skill.Id)">
                    <td class="expand-icon">
                        @(expandedSkillId == skill.Id ? "▼" : "▶")
                    </td>
                    <td class="title-column">
                        @if (!string.IsNullOrEmpty(skill.Url))
                        {
                            <a href="@skill.Url" target="_blank">@skill.Title</a>
                        }
                        else
                        {
                            @skill.Title
                        }
                    </td>
                    <td>@skill.Type</td>
                    <td>@skill.Date.ToShortDateString()</td>
                    <td>@skill.VenueOrPublisher</td>
                    @if (ShowAdminActions)
                    {
                        <td>
                            <button type="button" class="btn btn-default" aria-label="Delete Item" @onclick:stopPropagation @onclick="() => DeleteSkill(skill)">
                                <i class="bin2" aria-hidden="true"></i>
                            </button>
                        </td>
                    }
                </tr>
                @if (expandedSkillId == skill.Id)
                {
                    <tr class="description-row">
                        <td colspan="6">@skill.Description</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public bool ShowAdminActions { get; set; }

    [Parameter]
    public string ProfileId { get; set; } = string.Empty;

    private AddSkillDialog AddSkillDialog { get; set; } = default!;

    private List<Skill> skills = new();
    private string? expandedSkillId;

    protected override async Task OnInitializedAsync()
    {
        skills = (await Repository.GetAllAsync())
            .Where(s => s.ProfileId == ProfileId)
            .ToList();
    }

    private async Task AddSkill(Skill skillToAdd)
    {
        skills.Add(skillToAdd);
        await Repository.StoreAsync(skillToAdd);
    }

    private async Task DeleteSkill(Skill skill)
    {
        skills.Remove(skill);
        await Repository.DeleteAsync(skill.Id);
    }

    private void ToggleDescription(string skillId)
    {
        if (expandedSkillId == skillId)
        {
            expandedSkillId = null;
        }
        else
        {
            expandedSkillId = skillId;
        }
    }
}

<style>
    .table-container {
        overflow-x: auto;
    }

    .skill-table {
        width: 100%;
        border-collapse: collapse;
        table-layout: fixed; /* Ensures the table layout is fixed */
    }

    .skill-table th, .skill-table td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    .expand-column {
        width: 30px; /* Fixed width for expand icon column */
    }

    .expand-icon {
        cursor: pointer;
        text-align: center;
    }

    .title-column {
        width: 40%; /* Double the size of other columns */
    }

    .skill-table th:nth-child(3), .skill-table td:nth-child(3),
    .skill-table th:nth-child(4), .skill-table td:nth-child(4),
    .skill-table th:nth-child(5), .skill-table td:nth-child(5),
    .skill-table th:nth-child(6), .skill-table td:nth-child(6) {
        width: 15%; /* Fixed width for other columns */
    }

    .description-row td {
        padding: 8px;
        border-bottom: 1px solid #ddd;
        background-color: inherit;
        color: inherit;
        white-space: pre-wrap; /* Allows word wrapping */
    }

    .btn {
        margin-top: 8px;
    }
</style>

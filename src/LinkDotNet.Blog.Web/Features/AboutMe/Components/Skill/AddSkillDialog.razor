@using LinkDotNet.Blog.Domain
@using LinkDotNet.Blog.Web.Features.AboutMe.Components.Skill
@inject IToastService ToastService

<ModalDialog @ref="Dialog" Title="Add Skill">
    <EditForm Model="model" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="type" class="form-label">Type</label>
            <InputSelect id="type" @bind-Value="model.Type" class="form-control">
                <option value="">Select Type</option>
                @foreach (var type in skillTypes)
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <InputText id="title" @bind-Value="model.Title" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="date" class="form-label">Date</label>
            <InputDate id="date" @bind-Value="model.Date" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="venueOrPublisher" class="form-label">Venue/Publisher</label>
            <InputText id="venueOrPublisher" @bind-Value="model.VenueOrPublisher" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="url" class="form-label">URL</label>
            <InputText id="url" @bind-Value="model.Url" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <InputTextArea id="description" @bind-Value="model.Description" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </EditForm>
</ModalDialog>

@code {
    [Parameter]
    public EventCallback<Skill> SkillAdded { get; set; }

    [Parameter]
    public string ProfileId { get; set; } = string.Empty;

    private ModalDialog Dialog { get; set; } = default!;
    private AddSkillModel model = new();
    private readonly List<string> skillTypes = new() { "Book", "Interview", "Lecture", "Research", "Talk" };

    public void Open()
    {
        model = new AddSkillModel
        {
            Date = DateTime.Today 
        };
        Dialog.Open();
    }

    private async Task HandleSubmit()
    {
        var skill = Skill.Create(model.Type, model.Title, model.Date, model.VenueOrPublisher, model.Description, ProfileId, model.Url);
        await SkillAdded.InvokeAsync(skill);
        ToastService.ShowSuccess($"Created Skill {skill.Title} of type {skill.Type}");
        Dialog.Close();
    }

    private void Cancel()
    {
        Dialog.Close();
    }
}
